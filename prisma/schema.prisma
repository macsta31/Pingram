// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id        String   @id @default(uuid())
  name      String
  apiKey    String // store hashed key
  createdAt DateTime @default(now())

  templates         Template[]
  sequenceTemplates SequenceTemplate[]
  customers         Customer[]
  sequences         Sequence[]
  reminders         Reminder[]
}

model Customer {
  id          String   @id @default(uuid())
  account     Account  @relation(fields: [accountId], references: [id])
  accountId   String
  firstName   String
  lastName    String
  email       String
  phoneNumber String
  externalId  String
  createdAt   DateTime @default(now())

  reminders Reminder[]
}

model Template {
  id        String  @id @default(uuid())
  account   Account @relation(fields: [accountId], references: [id])
  accountId String
  name      String
  channel   String // 'sms', 'email', etc.
  content   String

  sequenceSteps SequenceStep[]
  reminders     Reminder[]
}

model SequenceTemplate {
  id            String   @id @default(uuid())
  account       Account  @relation(fields: [accountId], references: [id])
  accountId     String
  name          String
  cancelOnEvent String?
  createdAt     DateTime @default(now())

  steps     SequenceStep[]
  sequences Sequence[]
}

model SequenceStep {
  id                 String           @id @default(uuid())
  sequenceTemplate   SequenceTemplate @relation(fields: [sequenceTemplateId], references: [id])
  sequenceTemplateId String
  order              Int
  delayMinutes       Int
  channel            String
  template           Template         @relation(fields: [templateId], references: [id])
  templateId         String
}

model Sequence {
  id                 String           @id @default(uuid())
  account            Account          @relation(fields: [accountId], references: [id])
  accountId          String
  sequenceTemplate   SequenceTemplate @relation(fields: [sequenceTemplateId], references: [id])
  sequenceTemplateId String
  startAt            DateTime
  cancelledAt        DateTime?

  reminders Reminder[]
}

model Reminder {
  id         String    @id @default(uuid())
  sequence   Sequence  @relation(fields: [sequenceId], references: [id])
  sequenceId String
  customer   Customer  @relation(fields: [customerId], references: [id])
  customerId String
  account    Account   @relation(fields: [accountId], references: [id])
  accountId  String
  template   Template  @relation(fields: [templateId], references: [id])
  templateId String
  channel    String // 'sms', 'email', etc.
  sendAt     DateTime
  sentAt     DateTime?
  status     String // 'pending', 'sent', 'cancelled', 'failed'
  jobId      String
}
